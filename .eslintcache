[{"C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\index.js":"1","C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\App.js":"2","C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\reportWebVitals.js":"3","C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\Components\\Main\\Main.js":"4","C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\Components\\AvatarUI\\AvatarUI.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":162,"mtime":1612084881062,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3237,"mtime":1612391019036,"results":"10","hashOfConfig":"7"},{"size":2052,"mtime":1612110495865,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ba0cv1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\index.js",[],["24","25"],"C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\App.js",[],"C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\reportWebVitals.js",[],"C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\Components\\Main\\Main.js",[],"C:\\Users\\Sammy\\Desktop\\Glass_Website\\build\\src\\Components\\AvatarUI\\AvatarUI.js",["26"],"import React from 'react';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport sam from '../Img/sam.jpg'\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: '$ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n  root: {\r\n    width: 22,\r\n    height: 22,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n  },\r\n}))(Avatar);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AvatarUI() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <StyledBadge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        variant=\"dot\"\r\n      >\r\n        <Avatar alt=\"Remy Sharp\" src={sam}\r\n        // style={{ width: '30px', height: '30px', marginTop: '-10px', }} \r\n        />\r\n        {/* <h3>Olorunda Samuel</h3> */}\r\n      </StyledBadge>\r\n      {/* <Badge\r\n        overlap=\"circle\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        badgeContent={<SmallAvatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />}\r\n      >\r\n        <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n      </Badge> */}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":36,"column":7,"nodeType":"33","messageId":"34","endLine":36,"endColumn":18},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'SmallAvatar' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]